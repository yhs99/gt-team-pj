<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.team.mappers.user.reserve.userReserveMapper">
	<select id="getCartCheck"
		resultType="com.team.goott.user.domain.CartDTO">
		select * from cart where userId = #{userId}
	</select>

	<insert id="insertReserve"
		parameterType="com.team.goott.user.domain.ReserveDTO"
		useGeneratedKeys="true" keyProperty="reserveDTO.reserveId">
		INSERT INTO reserve (storeId, userId, couponId, reserveTime, name, people,
		statusCodeId, memo)
		VALUES (#{reserveDTO.storeId}, #{userId}, #{reserveDTO.couponId},
		#{reserveDTO.reserveTime}, #{reserveDTO.name}, #{reserveDTO.people},
		1, #{reserveDTO.memo})
	</insert>

	<select id="getMaxPeople" resultType="int">
		select maxPeople from store
		where storeId = #{storeId}
	</select>

	<select id="getTimeTotPeople" resultType="int">
		select
		COALESCE(sum(people),0) from
		reserve where storeId = #{storeId} AND
		reserveTime = #{reserveTime} AND
		statusCodeId != 3
	</select>

	<select id="getMaxPeoplePerReserve" resultType="int">
		select
		maxPeoplePerReserve from store where storeId = #{storeId}
	</select>

	<update id="updateReserved">
		update reserveSlots set reserved = 1 where storeId =
		#{storeId} AND slotDatetime = #{reserveTime};
	</update>

	<select id="getStoreMenuById"
		resultType="com.team.goott.user.domain.MenuDTO">
		select * from menu where menuId = #{menuId} AND storeId =
		#{storeId}
	</select>
	<update id="updateReserve">
		update reserve set statusCodeId = 3 where reserveId =
		#{reserveId} AND userId =#{userId}
	</update>
	<delete id="deleteCart">
		delete from cart where userId = #{userId}
	</delete>
	<select id="getCouponDiscount" resultType="int">
		select discount from
		coupon where couponId = #{couponId}
	</select>
	<update id="updateCouponStock">
		update coupon set stock= stock-1 where couponId =
		#{couponId};
	</update>
	<insert id="insertPayHistory">
		insert into
		payHistory(reserveId,storeId,menuId,menuName,stock,stockPerPrice,totalPrice,couponYN,couponId,payAmount)
		values(#{reserveId},#{storeId},#{menuId},#{menuName},#{stock},#{stockPerPrice},#{totalPrice},#{couponYN},#{couponId},#{payAmount})
	</insert>
	<select id="getSlotCheck" resultType="Integer">
		select reserved from
		reserveSlots where storeId = #{storeId} AND slotDatetime =
		#{reserveTime}
	</select>
	<select id="getCouponStockCheck" resultType="int">
		select COALESCE(stock, 0) from
		coupon where couponId = #{couponId}
	</select>
	<select id="getCouponStartTime"
		resultType="java.time.LocalDateTime">
		select start from coupon where couponId = #{couponId}
	</select>
	<select id="getCouponEndTime"
		resultType="java.time.LocalDateTime">
		select end from coupon where couponId = #{couponId}
	</select>
	<select id="getReserveTime" resultType="java.sql.Timestamp">
		select reserveTime from
		reserve where reserveId = #{reserveId} AND userId = #{userId}
	</select>
	<select id="getStoreId" resultType="int">
		select storeId from reserve where
		reserveId = #{reserveId} AND userId = #{userId}
	</select>
	<update id="getUpdateReserveSlotReserved">
		update reserveSlots set reserved = 0 where storeId =
		#{storeId} AND
		slotDatetime = #{reserveTime};
	</update>
	<select id="getCouponStoreId" resultType="int">
		select storeId FROM coupon WHERE couponId = #{couponId}
	</select>

	<resultMap type="com.team.goott.user.domain.ReserveListsVO" id="reserveResultMap">
		<id property="reserveId" column="reserveId"/>
		<result property="storeId" column="storeId"/>
		<result property="reserveTime" column="reserveTime"/>
		<result property="name" column="name"/>
		<result property="people" column="people"/>
		<result property="statusCodeId" column="statusCodeId"/>
		<result property="memo" column="memo"/>
		<result property="storeName" column="storeName"/>
		<result property="address" column="address"/>
		<result property="directionGuide" column="directionGuide"/>
		<result property="locationLatX" column="locationLatX"/>
		<result property="locationLonY" column="locationLonY"/>
		<collection property="storeImages" ofType="com.team.goott.owner.domain.StoreImagesDTO">
			<id property="imageId" column="imageId"/>
			<result property="url" column="url"/>
		</collection>
		<collection property="categories" ofType="com.team.goott.user.domain.StoreCategoryDTO">
			<id property="categoryId" column="categoryId"/>
			<result property="categoryCodeId" column="categoryCodeId"/>
			<result property="storeCategoryName" column="storeCategoryName"/>
		</collection>
	</resultMap>
	<select id="getUserReserveLists" parameterType="map" resultMap="reserveResultMap">
		SELECT
		r.reserveId,
		r.reserveTime,
		r.name,
		r.people,
		r.statusCodeId,
		r.memo,
		s.storeId,
		s.storeName,
		s.address,
		s.directionGuide,
		s.locationLatX,
		s.locationLonY,
		si.imageId,
		si.url,
		sc.categoryId,
		sc.categoryCodeId,
		sc.storeCategoryName
		FROM reserve r
		LEFT JOIN store s
		ON r.storeId = s.storeId
		LEFT JOIN storeImages si
		ON s.storeId = si.storeId
		LEFT JOIN storeCategory sc
		ON s.storeId = sc.storeId
		<where>
			<if test="reserveType == 'plan'">
				current_date() &lt; r.reserveTime
				AND r.statusCodeId IN (1,2)
			</if>
			<if test="reserveType == 'complete'">
				current_date() &gt; r.reserveTime
				AND r.statusCodeId IN (4,5)
			</if>
			<if test="reserveType == 'cancel'">
				r.statusCodeId = (3)
			</if>
			<if test="reserveType == null or reserveType == ''">
		        1 = 1
		    </if>
			AND userId = #{userId}
		</where>
		ORDER BY r.reserveTime ASC
	</select>
</mapper>